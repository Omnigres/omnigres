$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  init:
    - CREATE SCHEMA IF NOT EXISTS http_router_test
    - SET search_path TO http_router_test, public
    - |
      CREATE TYPE product_path AS (
          request omni_httpd.http_request,
          product_id text
      )
    - |
      CREATE TYPE user_post_path AS (
          request omni_httpd.http_request,
          user_id text,
          post_id text
      )

tests:
  - name: "Test make_router basic functionality"
    query: |
      SELECT make_router(
          'product_path',
          'product_path',
          '/product/(\d+)',
          'GET'
      );
    results: []

  - name: "Test router with valid request"
    query: |
      WITH test_request AS (
          SELECT ROW(
              'GET',
              '/product/123',
              'example.com',
              ARRAY[]::text[],
              '{}'::jsonb,
              NULL::bytea
          )::omni_httpd.http_request AS req
      )
      SELECT (product_path(req)).product_id = '123' AS matches
      FROM test_request;
    results:
      - matches: true

  - name: "Test router with invalid method"
    query: |
      WITH test_request AS (
          SELECT ROW(
              'POST',
              '/product/123',
              'example.com',
              ARRAY[]::text[],
              '{}'::jsonb,
              NULL::bytea
          )::omni_httpd.http_request AS req
      )
      SELECT product_path(req) IS NULL AS is_null
      FROM test_request;
    results:
      - is_null: true

  - name: "Test url_pattern_to_regex conversion"
    query: |
      SELECT 
        url_pattern_to_regex('/product/:id') = '^/product/([^/]+)$' AS test1,
        url_pattern_to_regex('/users/:userId/posts/:postId') = '^/users/([^/]+)/posts/([^/]+)$' AS test2,
        url_pattern_to_regex('/static/file.txt') = '^/static/file\.txt$' AS test3;
    results:
      - test1: true
        test2: true
        test3: true

  - name: "Test regex matching with generated patterns"
    query: |
      SELECT 
        '/product/123' ~ url_pattern_to_regex('/product/:id') AS should_match,
        '/product/' ~ url_pattern_to_regex('/product/:id') AS should_not_match;
    results:
      - should_match: true
        should_not_match: false